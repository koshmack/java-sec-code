name: Synopsys Security Testing for Black Duck

on:
  push:
    branches: [ master ]

  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: microsoft
          cache: maven
      #- name: Synopsys Action Black Duck
      #  uses: synopsys-sig/synopsys-action@main
      #  with:
      #    GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
          
      #    blackduck_apiToken: ${{ secrets.BLACKDUCK_API_TOKEN }}
      #    blackduck_url: ${{ secrets.BLACKDUCK_URL }}
      #    blackduck_scan_full: false
      #    blackduck_automation_fixpr: false
      #    blackduck_automation_prcomment: true
          # Optional parameter, but usually specified - the location of the Synopsys Bridge software
          # The Synopsys Bridge software distribution is platform specific - this must match the host OS
          # of your runner. For example in this case, we are using the latest version for Linux.
          #bridge_download_url: ${{ env.LINUX_BRIDGE_URL }}
      #  env:
      #    DETECT_PROJECT_NAME: ${{ vars.BLACKDUCK_PROJECT }}
      #    DETECT_PROJECT_VERSION_NAME: demo-dev
      #    BLACKDUCK_TRUST_CERT: true
          #DETECT_BLACKDUCK_RAPID_COMPARE_MODE: BOM_COMPARE_STRICT
      #- name: Synopsys Action Polaris
      #  uses: synopsys-sig/synopsys-action@main
      #  with:
      #    GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}

      #    polaris_serverUrl: ${{ secrets.POLARIS_SERVER_URL }}
      #    polaris_accessToken: ${{ secrets.POLARIS_ACCESS_TOKEN }}
      #    polaris_application_name: ${{ vars.POLARIS_APPLICATION_NAME }}
      #    polaris_project_name: ${{ vars.POLARIS_PROJECT_NAME }}
      #    polaris_assessment_types: ${{ vars.POLARIS_ASSESSMENT_TYPES }}
          # Waiting for automation
          #polaris_automation_fixpr: false
          #polaris_automation_prcomment: true
          # Optional parameter, but usually specified - the location of the Synopsys Bridge software
          # The Synopsys Bridge software distribution is platform specific - this must match the host OS
          # of your runner. For example in this case, we are using the latest version for Linux.
          #bridge_download_url: ${{ env.LINUX_BRIDGE_URL }}
      - name: Synopsys Action Coverity
        uses: synopsys-sig/synopsys-action@v1.1.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

          coverity_url: ${{ secrets.COVERITY_URL }}
          coverity_user: ${{ secrets.COVERITY_USER }}
          coverity_passphrase: ${{ secrets.COVERITY_PASSPHRASE }}
          coverity_project_name: ${{ vars.COVERITY_PROJECT_NAME }}
          coverity_stream_name: ${{ github.event.repository.name }}-${{ github.base_ref }}
          # Optionally you may specify the ID number of a saved view to apply as a "break the build" policy.
          # If any defects are found within this view when applied to the project, the build will be failed
          # with an exit code.
          #coverity_policy_view: 100001
          # Below fields are optional
          #coverity_repository_name: ${{ secrets.COVERITY_REPOSITORY_NAME }}
          #coverity_branch_name: ${{ secrets.COVERITY_BRANCH_NAME }}
